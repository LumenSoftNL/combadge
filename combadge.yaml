substitutions:
  name: "combadge"
  friendly_name: "ComBadge communicator"
  project_version: "0.5a"
  rttti_gain: "0.65"

esphome:
  name: "${name}"
  name_add_mac_suffix: true
  friendly_name: "${friendly_name}"
  project:
    name: lumensoft.${friendly_name}
    version: ${project_version}
  min_version: 2023.11.1

esp32:
  board: m5stack-atom
  framework:
    type: esp-idf

# To be able to get logs from the device via serial and api.
logger:
   level: verbose


external_components:
#  - source:
#      type: local
#      path: C:\Development\projects\esphome\esphome\components
#    components:
#      - espnow
#  - source: github://pr#7137
#    components:
#      - i2s_audio
#      - speaker
#    refresh: 2s
#  - source: github://pr#5968
#    components:
#      - rtttl
#    refresh: 2s
  - source: github://pr#5230
    components:
      - esp_adf
  - source:
      type: local
      path: C:\Development\projects\combadge\components

esp_adf:

i2s_audio:
  i2s_lrclk_pin: GPIO33
  i2s_bclk_pin: GPIO19

microphone:
  - platform: i2s_audio
    id: echo_microphone
    i2s_din_pin: GPIO23
    adc_type: external
    pdm: true

speaker:
  - platform: i2s_audio
    id: echo_speaker
    dac_type: external
    i2s_dout_pin: GPIO22
    use_16bit_mode: true
    mode: mono

rtttl:
  speaker: echo_speaker
  id: my_rtttl
  gain: ${rttti_gain}

espnow:
  auto_add_peer: true
  peers:
    - FF:FF:FF:FF:FF:FF
  on_receive:
    - logger.log:
        format: "Received: %s RSSI: %d"
        args: [ it->data().data(),  it->rssi()]

intercom:

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO39
      inverted: true
    name: Button
    disabled_by_default: true
    entity_category: diagnostic
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    id: echo_button
    on_click:
      - rtttl.play: "Urgent:d=8,o=6,b=500:c,e,d7"
#    on_press:
#      - intercom.state: microphone
#    on_release:
#      - intercom.state: none
